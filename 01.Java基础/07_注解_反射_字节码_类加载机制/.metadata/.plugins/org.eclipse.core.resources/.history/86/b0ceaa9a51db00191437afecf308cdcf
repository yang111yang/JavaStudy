package com.liu.reflection;

import java.lang.reflect.Field;

import com.liu.reflection.user.User;

/**
 * 通过反射获取类的名称、类的属性、方法和构造器
 * @author liujy
 *
 */
public class Demo01 {
	
	public static void main(String[] args) {
		String path = "com.liu.reflection.user.User";
		try {
			Class<User> clazz = (Class<User>) Class.forName(path);
			
			// 获取类名称
			System.out.println(clazz.getName()); // com.liu.reflection.user.User
			System.out.println(clazz.getSimpleName()); // User
			
			// 获取类的属性
//			Field[] fields = clazz.getFields(); // 只能获取public修饰的属性
			Field[] fields = clazz.getDeclaredFields();
			System.out.println(fields.length);
			
			// 获取类的方法
			
			// 获取类的构造器
			
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

}
