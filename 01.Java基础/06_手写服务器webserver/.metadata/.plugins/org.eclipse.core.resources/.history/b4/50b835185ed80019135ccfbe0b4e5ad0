package com.liu.server;

import java.io.IOException;
import java.io.InputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 请求信息处理
 * 处理请求参数中key相同，value不同的情况
 * 处理中文乱码问题
 * @author liujy
 *
 */
public class Request02 {

	private String requestInfo; //协议信息
	private String requestMethod; // 请求方式
	private String requestUrl; // url
	private String requestPara; // 请求参数
	private final String CRLF = "\r\n";
	private Map<String,List<String>> paraMap;
	
	public Request02(Socket client) throws IOException {
		this(client.getInputStream());
	}
	
	public Request02(InputStream is) {
		paraMap = new HashMap<String, List<String>>();
		byte[] datas = new byte[1024*1024];
		int len;
		try {
			len = is.read(datas);
			requestInfo = new String(datas,0,len);
			System.out.println(requestInfo);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		// 分解字符串
		parseRequestInfo();
	}
	
	public void parseRequestInfo() {
		this.requestMethod = this.requestInfo.substring(0,this.requestInfo.indexOf("/")).toLowerCase().trim();
		int startIdx = this.requestInfo.indexOf("/") + 1;
		int endIdx = this.requestInfo.indexOf("HTTP/");
		this.requestUrl = this.requestInfo.substring(startIdx, endIdx);
		int queryIdx = this.requestUrl.indexOf("?");
		if (queryIdx > 0) {
			String[] split = this.requestUrl.split("\\?");
			this.requestUrl = split[0];
			this.requestPara = split[1].trim();
		}
		if (this.requestMethod.equals("post")) {
			String qStr = this.requestInfo.substring(this.requestInfo.lastIndexOf(CRLF)).trim();
			if (this.requestPara == null) {
				this.requestPara = qStr;
			} else {
				this.requestPara += "&" + qStr;
			}
		}
		System.out.println(this.requestMethod+"-->"+this.requestUrl+"-->"+this.requestPara);
		
		//处理请求参数为Map
		convertMap();
	}
	
	/**
	 * 处理请求参数为Map
	 * fav=1&fav=2&uname=laoliu&age=123&others=
	 */
	public void convertMap() {
		// 以&拆分字符串
		String[] queryStrs = requestPara.split("&");
		// 遍历拆分的字符串数组
		for (String queryStr : queryStrs) {
			// 拆分参数
			String[] query = queryStr.split("=");
			String[] query1 = Arrays.copyOf(query, 2);
			String key = query1[0];
			String value = query1[1];
			if (!paraMap.containsKey(key)) { // 如果key不存在，新增一个
				paraMap.put(key, new ArrayList<String>());
			}
			// 添加value
			paraMap.get(key).add(value);
		}
		
	}
	
	/**
	 * 通过key获取多个value
	 * @param key
	 * @return
	 */
	public String[] getParaValues(String key) {
		List<String> list = paraMap.get(key);
		if (list == null || list.size() < 1) {
			return null;
		}
		return list.toArray(new String[0]);
	}
	
	/**
	 * 通过key获取一个value
	 * @param key
	 * @return
	 */
	public String getParaValue(String key) {
		String[] values = getParaValues(key);
		return values == null ? null : values[0];
	}

	public String getRequestInfo() {
		return requestInfo;
	}

	public String getRequestUrl() {
		return requestUrl;
	}

	public String getRequestPara() {
		return requestPara;
	}

	public Map<String, List<String>> getParaMap() {
		return paraMap;
	}

	
	
}
